{"appId":"org.cimbar.camerafilecopy","appShortcutName":"CameraFileCopy","appDisplayName":"CameraFileCopy","authorId":"1","releaseTagName":"","downloadUrls":{"1":{"installerType":"AndroidApkZip","asset":"url","url":"https://f-droid.org/repo/org.cimbar.camerafilecopy_21.apk"}},"install":{"win32":null,"winarm":null,"linux":null,"linuxArm64":null,"linuxArm7":null,"android":{"assetId":1,"min_sdk":21,"abi":["Aarch64"]}},"displayImages":[],"description":"use your camera to transfer data – even in airplane mode\nUsing animated bar codes, it's possible to send data over the air using only the camera. This app is the barcode decoder (receiver). An encoder (sender) can be seen at <a href='https://cimbar.org/' target='_blank' rel='nofollow'>cimbar.org</a>.\n\nWith <i>CameraFileCopy</i> it is possible to receive data over the camera as a one-way data channel. It does not use any antennas (wifi, bluetooth, nfc, ...) or other tricks. Notably, this means it works just as well in airplane mode.\n\nThe app reads animated <a href='https://github.com/sz3/libcimbar' target='_blank' rel='nofollow'>cimbar codes</a>. Nearly all the interesting logic is from libcimbar – included via a git subtree. The sender component of cfc is a cimbar encoder -- such as <a href='https://cimbar.org/' target='_blank' rel='nofollow'>cimbar.org</a>. Navigate to that website (or use libcimbar's <code>cimbar_send</code> to generate barcodes natively), open a file to initialize the cimbar stream, and point the app+camera at the animated barcode.\n","repo":{"author":"Unknown","repo":"https://github.com/sz3/cfc"},"usrVersion":"d418680006bef2131e8055f3e6c64b7a3edccc7dee4cbf7b9cb4ffb274c2bd42","version":1761151824,"site":null,"source":"https://github.com/sz3/cfc","license_or_tos":"MIT","resources":null,"verified":false}